{"ast":null,"code":"var _jsxFileName = \"/Users/rachelramberg/General_Assembly/sei/loon/projects/P-4/fithub/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport ClassCreate from \"../screens/ClassCreate/ClassCreate\";\nimport ClassEdit from \"../screens/ClassEdit/ClassEdit\";\nimport StudioCreateEdit from \"../screens/StudioCreateEdit/StudioCreateEdit\";\nimport StudioDetail from \"../screens/StudioDetail/StudioDetail\";\nimport Studios from \"../screens/Studios/Studios\";\nimport UserStudioDetail from \"../screens/UserStudioDetail\";\nimport { deleteFitClass, postFitClass, putFitClass } from \"../services/classes\";\nimport { getAllStudios, postStudio, putStudio } from \"../services/studios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer(props) {\n  _s();\n\n  const [studios, setStudios] = useState([]); // empty array or null for fitclass\n\n  const [fitClasses, setFitClasses] = useState([]); // const [studio, setStudio] = useState(null);\n\n  const history = useHistory();\n  const {\n    currentUser\n  } = props; // useEffect function to get all studios\n\n  useEffect(() => {\n    const fetchStudios = async () => {\n      const studioList = await getAllStudios();\n      console.log(studioList);\n      setStudios(studioList);\n    };\n\n    fetchStudios();\n  }, []); // function to create studio\n\n  const handleCreateStudio = async formData => {\n    const studioItem = await postStudio(formData);\n    setStudios(prevState => [...prevState, studioItem]); // push to user's studio detail page???\n\n    history.push(\"/\");\n  }; //function to update studio\n\n\n  const handleUpdateStudio = async (id, formData) => {\n    const studioItem = await putStudio(id, formData);\n    setStudios(prevState => prevState.map(studio => {\n      return studio.id === Number(id) ? studioItem : studio;\n    }));\n  }; //function to create fitclass function\n\n\n  const handleCreateFitClass = async formData => {\n    const classItem = await postFitClass(formData);\n    setFitClasses(prevState => [...prevState, classItem]); // push back to user's studio detail page???\n\n    history.push(\"/\");\n  }; // update fitclass\n\n\n  const handleUpdateFitClass = async (id, formData) => {\n    const classItem = await putFitClass(id, formData);\n    setFitClasses(prevState => prevState.map(fitClass => {\n      return fitClass.id === Number(id) ? classItem : fitClass;\n    }));\n  }; // delete fitclass\n  // do I  need to\n\n\n  const handleDeleteFitClass = async id => {\n    await deleteFitClass(id);\n    setFitClasses(prevState => prevState.filter(fitClass => fitClass.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is main container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/studios/:id\",\n        children: /*#__PURE__*/_jsxDEV(StudioDetail, {\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/updateclass/:id\",\n        children: /*#__PURE__*/_jsxDEV(ClassEdit, {\n          handleUpdateFitClass: handleUpdateFitClass,\n          handleDeleteFitClass: handleDeleteFitClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/my-studio\",\n        children: /*#__PURE__*/_jsxDEV(StudioDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-update-studio\",\n        children: /*#__PURE__*/_jsxDEV(StudioCreateEdit, {\n          handleCreateStudio: handleCreateStudio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/createclass\",\n        children: /*#__PURE__*/_jsxDEV(ClassCreate, {\n          handleCreateFitClass: handleCreateFitClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/studios\",\n        children: /*#__PURE__*/_jsxDEV(Studios, {\n          studios: studios\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"hy5h5Oy+8CeiLOhUgov+QBq2g5g=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/rachelramberg/General_Assembly/sei/loon/projects/P-4/fithub/client/src/containers/MainContainer.jsx"],"names":["useEffect","useState","Switch","Route","useHistory","ClassCreate","ClassEdit","StudioCreateEdit","StudioDetail","Studios","UserStudioDetail","deleteFitClass","postFitClass","putFitClass","getAllStudios","postStudio","putStudio","MainContainer","props","studios","setStudios","fitClasses","setFitClasses","history","currentUser","fetchStudios","studioList","console","log","handleCreateStudio","formData","studioItem","prevState","push","handleUpdateStudio","id","map","studio","Number","handleCreateFitClass","classItem","handleUpdateFitClass","fitClass","handleDeleteFitClass","filter"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport ClassCreate from \"../screens/ClassCreate/ClassCreate\";\nimport ClassEdit from \"../screens/ClassEdit/ClassEdit\";\nimport StudioCreateEdit from \"../screens/StudioCreateEdit/StudioCreateEdit\";\nimport StudioDetail from \"../screens/StudioDetail/StudioDetail\";\nimport Studios from \"../screens/Studios/Studios\";\nimport UserStudioDetail from \"../screens/UserStudioDetail\";\nimport { deleteFitClass, postFitClass, putFitClass } from \"../services/classes\";\nimport { getAllStudios, postStudio, putStudio } from \"../services/studios\";\n\nfunction MainContainer(props) {\n  const [studios, setStudios] = useState([]);\n  // empty array or null for fitclass\n  const [fitClasses, setFitClasses] = useState([]);\n  // const [studio, setStudio] = useState(null);\n  const history = useHistory();\n\n  const { currentUser } = props;\n\n  // useEffect function to get all studios\n  useEffect(() => {\n    const fetchStudios = async () => {\n      const studioList = await getAllStudios();\n      console.log(studioList);\n      setStudios(studioList);\n    };\n    fetchStudios();\n  }, []);\n\n  // function to create studio\n  const handleCreateStudio = async (formData) => {\n    const studioItem = await postStudio(formData);\n    setStudios((prevState) => [...prevState, studioItem]);\n    // push to user's studio detail page???\n    history.push(\"/\");\n  };\n\n  //function to update studio\n  const handleUpdateStudio = async (id, formData) => {\n    const studioItem = await putStudio(id, formData);\n    setStudios((prevState) =>\n      prevState.map((studio) => {\n        return studio.id === Number(id) ? studioItem : studio;\n      })\n    );\n  };\n\n  //function to create fitclass function\n  const handleCreateFitClass = async (formData) => {\n    const classItem = await postFitClass(formData);\n    setFitClasses((prevState) => [...prevState, classItem]);\n    // push back to user's studio detail page???\n    history.push(\"/\");\n  };\n\n  // update fitclass\n  const handleUpdateFitClass = async (id, formData) => {\n    const classItem = await putFitClass(id, formData);\n    setFitClasses((prevState) =>\n      prevState.map((fitClass) => {\n        return fitClass.id === Number(id) ? classItem : fitClass;\n      })\n    );\n  };\n\n  // delete fitclass\n  // do I  need to\n  const handleDeleteFitClass = async (id) => {\n    await deleteFitClass(id);\n    setFitClasses((prevState) =>\n      prevState.filter((fitClass) => fitClass.id !== id)\n    );\n  };\n\n  return (\n    <div>\n      <h2>This is main container</h2>\n      {/* <UserStudioDetail /> */}\n      <Switch>\n        <Route path=\"/studios/:id\">\n          <StudioDetail currentUser={currentUser} />\n        </Route>\n        <Route path=\"/updateclass/:id\">\n          <ClassEdit\n            handleUpdateFitClass={handleUpdateFitClass}\n            handleDeleteFitClass={handleDeleteFitClass}\n          />\n        </Route>\n        <Route path=\"/my-studio\">\n          <StudioDetail />\n        </Route>\n        <Route path=\"/create-update-studio\">\n          <StudioCreateEdit handleCreateStudio={handleCreateStudio} />\n        </Route>\n        <Route path=\"/createclass\">\n          <ClassCreate handleCreateFitClass={handleCreateFitClass} />\n        </Route>\n        <Route path=\"/studios\">\n          <Studios studios={studios} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}